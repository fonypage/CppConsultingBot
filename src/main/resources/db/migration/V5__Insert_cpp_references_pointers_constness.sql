-- V4__Insert_cpp_references_pointers_constness.sql

INSERT INTO theory_topics (topic_name, material) VALUES
(
    'Ссылки, указатели, константность',
    CONCAT(
        'В языке программирования C++ ссылки, указатели и константность являются фундаментальными концепциями, которые позволяют эффективно управлять памятью и обеспечивать безопасность кода.\n\n',

        'Ссылки\n\n',

        'Ссылки представляют собой альтернативные имена для уже существующих переменных. Они облегчают работу с переменными, позволяя изменять их значения без необходимости использования указателей.\n',
        'Синтаксис:\n',
        'int a = 10;\n',
        'int &ref = a; // ref теперь ссылается на a\n',
        'ref = 20; // a теперь равно 20\n\n',

        'Особенности ссылок:\n',
        '- Должны быть инициализированы при объявлении.\n',
        '- Не могут быть переназначены для ссылки на другую переменную.\n',
        '- Не допускают значения nullptr.\n\n',

        'Указатели\n\n',

        'Указатели хранят адреса других переменных и позволяют динамически управлять памятью.\n',
        'Синтаксис:\n',
        'int a = 10;\n',
        'int *ptr = &a; // ptr хранит адрес переменной a\n',
        '*ptr = 20; // значение a теперь равно 20\n\n',

        'Особенности указателей:\n',
        '- Могут быть переназначены для указания на разные переменные.\n',
        '- Могут хранить значение nullptr, указывающее на отсутствие адреса.\n',
        '- Требуют аккуратного управления памятью для предотвращения утечек и ошибок.\n\n',

        'Константность\n\n',

        'Константность позволяет объявлять переменные и указатели как неизменяемые, что повышает безопасность и предсказуемость кода.\n',

        'Константные переменные:\n',
        'const int a = 10;\n',
        '// a = 20; // Ошибка: нельзя изменить значение константы\n\n',

        'Константные ссылки:\n',
        'Позволяют ссылаться на переменные без возможности их изменения.\n',
        'Синтаксис:\n',
        'int a = 10;\n',
        'const int &ref = a;\n',
        '// ref = 20; // Ошибка: нельзя изменить значение через константную ссылку\n\n',

        'Константные указатели:\n',
        '- Указатель может указывать на разные переменные, но значение по адресу нельзя изменить.\n',
        'Синтаксис:\n',
        'int a = 10;\n',
        'int b = 20;\n',
        'const int *ptr = &a;\n',
        'ptr = &b; // Допустимо: указатель может перенаправляться\n',
        '// *ptr = 30; // Ошибка: нельзя изменить значение по адресу\n\n',

        'Указатели на константы vs Константные указатели:\n',
        '- Указатель на константу (const int *ptr): нельзя изменить значение по адресу, но можно переназначить указатель.\n',
        '- Константный указатель (int * const ptr): можно изменить значение по адресу, но нельзя переназначить указатель.\n\n',

        'Примеры Использования\n\n',

        'Передача по ссылке:\n',
        'Позволяет изменять оригинальную переменную без использования указателей.\n',
        'Синтаксис:\n',
        'void increment(int &num) {\n',
        '    num++;\n',
        '}\n\n',
        'int main() {\n',
        '    int a = 5;\n',
        '    increment(a); // a теперь равно 6\n',
        '    return 0;\n',
        '}\n\n',

        'Динамическое выделение памяти с указателями:\n',
        'Позволяет выделять память во время выполнения программы.\n',
        'Синтаксис:\n',
        'int *ptr = new int; // Выделение памяти для одного int\n',
        '*ptr = 10;\n',
        'delete ptr; // Освобождение памяти\n\n',

        'int *arr = new int[5]; // Выделение массива из 5 int\n',
        '// ... использование массива ...\n',
        'delete[] arr; // Освобождение памяти массива\n'
    )
);
