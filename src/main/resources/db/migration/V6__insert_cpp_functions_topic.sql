INSERT INTO theory_topics (topic_name, material) VALUES
(
    'Функции в C++',
    CONCAT(
        'Функции в языке программирования C++ являются основными строительными блоками для структурирования и организации кода. Они позволяют группировать команды, обеспечивать повторное использование кода и улучшать его читаемость и поддержку.

',

        'Объявление и Определение Функций

',

        'Функции в C++ объявляются с помощью заголовка, который указывает тип возвращаемого значения, имя функции и параметры (если они есть). Определение функции также включает тело, содержащее команды.
',
        'Синтаксис:
',
        'int add(int a, int b) {
',
        '    return a + b;
',
        '}

',

        'Возвращаемое Значение

',

        'Функции могут возвращать значение с помощью оператора return. Тип возвращаемого значения указывается в заголовке функции.
',
        'Пример:
',
        'double multiply(double x, double y) {
',
        '    return x * y;
',
        '}

',

        'Функции без Возвращаемого Значения

',

        'Функции, которые ничего не возвращают, имеют тип void. Такие функции используются для выполнения действий, не требующих возврата результата.
',
        'Пример:
',
        'void printMessage() {
',
        '    std::cout << "Hello, World!" << std::endl;
',
        '}

',

        'Передача Параметров

',

        'Функции могут принимать параметры для обработки данных. Параметры могут передаваться по значению или по ссылке.
',
        'Передача по значению создает копию аргумента, тогда как передача по ссылке позволяет функции изменять исходное значение переменной.
',
        'Пример передачи по ссылке:
',
        'void swap(int &a, int &b) {
',
        '    int temp = a;
',
        '    a = b;
',
        '    b = temp;
',
        '}

',

        'Перегрузка Функций

',

        'В C++ можно объявлять несколько функций с одним и тем же именем, если они имеют разные параметры. Это называется перегрузкой функций и позволяет использовать одно имя для обработки разных типов данных.
',
        'Пример:
',
        'int add(int a, int b) {
',
        '    return a + b;
',
        '}
',
        'double add(double a, double b) {
',
        '    return a + b;
',
        '}

',

        'Рекурсивные Функции

',

        'Функции могут вызывать сами себя, что называется рекурсией. Рекурсия используется для решения задач, которые можно разбить на аналогичные подзадачи.
',
        'Пример:
',
        'int factorial(int n) {
',
        '    if (n <= 1) return 1;
',
        '    return n * factorial(n - 1);
',
        '}

',

        'Лямбда-Функции

',

        'C++ также поддерживает анонимные функции, называемые лямбда-выражениями. Они позволяют создавать функции непосредственно в месте их использования.
',
        'Пример:
',
        'auto add = [](int a, int b) {
',
        '    return a + b;
',
        '};
',
        'std::cout << add(3, 4) << std::endl; // выводит 7
'
    )
);
